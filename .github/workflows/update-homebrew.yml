name: Update Homebrew Formula

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update (e.g., 0.1.2)'
        required: true
        type: string

jobs:
  update-formula:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
            VERSION="${VERSION#v}"  # Remove 'v' prefix if present
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Wait for release assets
        if: github.event_name == 'release'
        run: |
          echo "Waiting for release assets to be uploaded..."
          sleep 60  # Wait 1 minute for assets to be available
          
      - name: Download and calculate SHA256
        id: sha256
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          RELEASE_URL="https://github.com/calltrace/traverse/releases/download/v${VERSION}"
          
          # Function to get SHA256
          get_sha256() {
            local url="$1"
            curl -L -s "$url" | sha256sum | cut -d' ' -f1
          }
          
          echo "Calculating SHA256 hashes for version ${VERSION}..."
          
          SHA_MACOS_ARM64=$(get_sha256 "${RELEASE_URL}/traverse-macos-arm64.tar.gz")
          SHA_MACOS_AMD64=$(get_sha256 "${RELEASE_URL}/traverse-macos-amd64.tar.gz")
          SHA_LINUX_AMD64=$(get_sha256 "${RELEASE_URL}/traverse-linux-amd64.tar.gz")
          
          echo "sha_macos_arm64=$SHA_MACOS_ARM64" >> $GITHUB_OUTPUT
          echo "sha_macos_amd64=$SHA_MACOS_AMD64" >> $GITHUB_OUTPUT
          echo "sha_linux_amd64=$SHA_LINUX_AMD64" >> $GITHUB_OUTPUT
          
      - name: Update formula
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          FORMULA_PATH="HomebrewFormula/traverse.rb"
          
          # Update version
          sed -i "s/version \".*\"/version \"${VERSION}\"/" "$FORMULA_PATH"
          
          # Update SHA256 hashes (handle both placeholder and actual hash patterns)
          sed -i "s/sha256 \"[^\"]*\" # MACOS_ARM64/sha256 \"${{ steps.sha256.outputs.sha_macos_arm64 }}\" # MACOS_ARM64/" "$FORMULA_PATH" || \
          sed -i "s/sha256 \"PLACEHOLDER_SHA256_MACOS_ARM64\"/sha256 \"${{ steps.sha256.outputs.sha_macos_arm64 }}\"/" "$FORMULA_PATH"
          
          sed -i "s/sha256 \"[^\"]*\" # MACOS_AMD64/sha256 \"${{ steps.sha256.outputs.sha_macos_amd64 }}\" # MACOS_AMD64/" "$FORMULA_PATH" || \
          sed -i "s/sha256 \"PLACEHOLDER_SHA256_MACOS_AMD64\"/sha256 \"${{ steps.sha256.outputs.sha_macos_amd64 }}\"/" "$FORMULA_PATH"
          
          sed -i "s/sha256 \"[^\"]*\" # LINUX_AMD64/sha256 \"${{ steps.sha256.outputs.sha_linux_amd64 }}\" # LINUX_AMD64/" "$FORMULA_PATH" || \
          sed -i "s/sha256 \"PLACEHOLDER_SHA256_LINUX_AMD64\"/sha256 \"${{ steps.sha256.outputs.sha_linux_amd64 }}\"/" "$FORMULA_PATH"
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update Homebrew formula for v${{ steps.version.outputs.version }}"
          title: "Update Homebrew formula for v${{ steps.version.outputs.version }}"
          body: |
            This PR updates the Homebrew formula for Traverse v${{ steps.version.outputs.version }}.
            
            ## Changes
            - Updated version to ${{ steps.version.outputs.version }}
            - Updated SHA256 hashes for all platforms
            
            ## Installation
            After merging, users can install with:
            ```bash
            brew install --formula https://raw.githubusercontent.com/calltrace/traverse/main/HomebrewFormula/traverse.rb
            ```
          branch: homebrew-update-v${{ steps.version.outputs.version }}
          delete-branch: true