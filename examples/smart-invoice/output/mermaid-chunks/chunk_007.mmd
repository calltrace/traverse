sequenceDiagram
    %% Chunk 7 of 7 - Lines 1337-1429
    title Call Graph - Chunk 7

    participant User
    participant SmartInvoiceEscrow
    participant SmartInvoiceInstant
    participant MockWETH

    Note over User: Continued from Chunk 6

SmartInvoiceEscrow-->>User: ret from withdraw()
User->>SmartInvoiceInstant: call withdraw()
opt Internal: SmartInvoiceInstant._withdraw
  activate SmartInvoiceInstant
  SmartInvoiceInstant->>SmartInvoiceInstant: SmartInvoiceInstant._withdraw()
  Note over SmartInvoiceInstant: Read SmartInvoiceInstant.token
  alt balance == 0
    Note over SmartInvoiceInstant: No operations in 'then' branch
  end
  Note over SmartInvoiceInstant: Read SmartInvoiceInstant.token
  Note over SmartInvoiceInstant: Read SmartInvoiceInstant.provider
  SmartInvoiceInstant->>SmartInvoiceInstant: emit Withdraw(balance)
  deactivate SmartInvoiceInstant
end
SmartInvoiceInstant-->>User: ret from withdraw()
User->>MockWETH: call withdraw()
alt balanceOf[msg.sender] < wad
  Note over MockWETH: No operations in 'then' branch
end
Note over MockWETH: Read MockWETH.balanceOf
Note over MockWETH: Read MockWETH.balanceOf
Note over MockWETH: Read MockWETH.balanceOf
Note over MockWETH: Write MockWETH.balanceOf
MockWETH->>MockWETH: emit Withdrawal(msg.sender, wad)
MockWETH-->>User: ret from withdraw()
User->>SmartInvoiceEscrow: call withdrawTokens()
alt _token == token
  opt Internal: SmartInvoiceEscrow._withdraw
    activate SmartInvoiceEscrow
    SmartInvoiceEscrow->>SmartInvoiceEscrow: SmartInvoiceEscrow._withdraw()
    alt locked
      Note over SmartInvoiceEscrow: No operations in 'then' branch
    end
    Note over SmartInvoiceEscrow: Read SmartInvoiceEscrow.locked
    alt block.timestamp <= terminationTime
      Note over SmartInvoiceEscrow: No operations in 'then' branch
    end
    Note over SmartInvoiceEscrow: Read SmartInvoiceEscrow.terminationTime
    Note over SmartInvoiceEscrow: Read SmartInvoiceEscrow.token
    alt balance == 0
      Note over SmartInvoiceEscrow: No operations in 'then' branch
    end
    Note over SmartInvoiceEscrow: Read SmartInvoiceEscrow.token
    opt Internal: SmartInvoiceEscrow._withdrawDeposit
      activate SmartInvoiceEscrow
      SmartInvoiceEscrow->>SmartInvoiceEscrow: SmartInvoiceEscrow._withdrawDeposit(token, balance)
      Note over SmartInvoiceEscrow: Read SmartInvoiceEscrow.client
      deactivate SmartInvoiceEscrow
    end
    Note over SmartInvoiceEscrow: Read SmartInvoiceEscrow.amounts
    Note over SmartInvoiceEscrow: Write SmartInvoiceEscrow.milestone
    SmartInvoiceEscrow->>SmartInvoiceEscrow: emit Withdraw(balance)
    deactivate SmartInvoiceEscrow
  end
else else
  alt block.timestamp <= terminationTime
    Note over SmartInvoiceEscrow: No operations in 'then' branch
  end
  Note over SmartInvoiceEscrow: Read SmartInvoiceEscrow.terminationTime
  alt balance == 0
    Note over SmartInvoiceEscrow: No operations in 'then' branch
  end
  opt Internal: SmartInvoiceEscrow._withdrawDeposit
    activate SmartInvoiceEscrow
    SmartInvoiceEscrow->>SmartInvoiceEscrow: SmartInvoiceEscrow._withdrawDeposit(_token, balance)
    Note over SmartInvoiceEscrow: Read SmartInvoiceEscrow.client
    deactivate SmartInvoiceEscrow
  end
end
Note over SmartInvoiceEscrow: Read SmartInvoiceEscrow.token
SmartInvoiceEscrow-->>User: ret from withdrawTokens()
User->>SmartInvoiceInstant: call withdrawTokens()
alt _token == token
  opt Internal: SmartInvoiceInstant._withdraw
    activate SmartInvoiceInstant
    SmartInvoiceInstant->>SmartInvoiceInstant: SmartInvoiceInstant._withdraw()
    Note over SmartInvoiceInstant: Read SmartInvoiceInstant.token
    alt balance == 0
      Note over SmartInvoiceInstant: No operations in 'then' branch
    end
    Note over SmartInvoiceInstant: Read SmartInvoiceInstant.token
    Note over SmartInvoiceInstant: Read SmartInvoiceInstant.provider
    SmartInvoiceInstant->>SmartInvoiceInstant: emit Withdraw(balance)
    deactivate SmartInvoiceInstant
  end
else else
  alt balance == 0
    Note over SmartInvoiceInstant: No operations in 'then' branch
  end
  Note over SmartInvoiceInstant: Read SmartInvoiceInstant.provider
end
Note over SmartInvoiceInstant: Read SmartInvoiceInstant.token
SmartInvoiceInstant-->>User: ret from withdrawTokens()

    %% Lines: 1337-1429
    %% Participants: 4