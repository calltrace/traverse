{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "traverse",
  "rules": {
    "rulebook": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "rules_block"
          },
          {
            "type": "SYMBOL",
            "name": "comment"
          }
        ]
      }
    },
    "rules_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "keyword",
          "content": {
            "type": "STRING",
            "value": "rules"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "inference"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "capture_form"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "emit"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "/*"
        },
        {
          "type": "PATTERN",
          "value": "[^*]*\\*+([^/*][^*]*\\*+)*"
        },
        {
          "type": "STRING",
          "value": "/"
        }
      ]
    },
    "symbol": {
      "type": "PATTERN",
      "value": "[a-zA-Z0-9_+\\-*\\/%^=<>!$]+"
    },
    "num": {
      "type": "PATTERN",
      "value": "[+\\-]?\\d+"
    },
    "string_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^\"\\\\]+"
              },
              {
                "type": "PATTERN",
                "value": "\\\\."
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "capture": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "@"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "provenance_spec"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "capture_name"
        }
      ]
    },
    "capture_name": {
      "type": "PATTERN",
      "value": "[a-zA-Z0-9_]+"
    },
    "provenance_spec": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "provenance_type"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ":"
        }
      ]
    },
    "provenance_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "path"
        },
        {
          "type": "STRING",
          "value": "span"
        },
        {
          "type": "STRING",
          "value": "full"
        },
        {
          "type": "STRING",
          "value": "default"
        }
      ]
    },
    "quantifier": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "*"
        },
        {
          "type": "STRING",
          "value": "+"
        },
        {
          "type": "STRING",
          "value": "?"
        }
      ]
    },
    "key_value": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "symbol"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "capture"
            },
            {
              "type": "SYMBOL",
              "name": "symbol"
            },
            {
              "type": "SYMBOL",
              "name": "key_value"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "inference": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "keyword",
          "content": {
            "type": "STRING",
            "value": "infer"
          }
        },
        {
          "type": "SYMBOL",
          "name": "relation"
        },
        {
          "type": "SYMBOL",
          "name": "parameters"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "inference_paths"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "relation": {
      "type": "PATTERN",
      "value": "[a-zA-Z][a-zA-Z0-9_]*"
    },
    "parameters": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "parameter_list"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "parameter_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "variable"
              }
            ]
          }
        }
      ]
    },
    "inference_paths": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "keyword",
          "content": {
            "type": "STRING",
            "value": "via"
          }
        },
        {
          "type": "SYMBOL",
          "name": "inference_path_list"
        }
      ]
    },
    "inference_path_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "path_definition"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "path_definition"
              }
            ]
          }
        }
      ]
    },
    "path_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "path_body"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "path_body": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "predicate_expr"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "computation"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "predicate_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "prefix_predicate"
        },
        {
          "type": "SYMBOL",
          "name": "predicate"
        }
      ]
    },
    "prefix_predicate": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "prefix_operator"
        },
        {
          "type": "SYMBOL",
          "name": "predicate"
        }
      ]
    },
    "prefix_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "not"
        },
        {
          "type": "STRING",
          "value": "max"
        },
        {
          "type": "STRING",
          "value": "min"
        },
        {
          "type": "STRING",
          "value": "count"
        },
        {
          "type": "STRING",
          "value": "sum"
        }
      ]
    },
    "predicate": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "argument_list"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "computation": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "keyword",
          "content": {
            "type": "STRING",
            "value": "compute"
          }
        },
        {
          "type": "SYMBOL",
          "name": "variable"
        },
        {
          "type": "SYMBOL",
          "name": "qexpr"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "argument_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "argument"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "argument"
              }
            ]
          }
        }
      ]
    },
    "argument": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable"
        },
        {
          "type": "SYMBOL",
          "name": "constant"
        },
        {
          "type": "SYMBOL",
          "name": "placeholder"
        }
      ]
    },
    "variable": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "?"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "constant": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z][a-zA-Z0-9_]*"
    },
    "number": {
      "type": "PATTERN",
      "value": "\\d+"
    },
    "placeholder": {
      "type": "STRING",
      "value": "_"
    },
    "emit": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "keyword",
          "content": {
            "type": "STRING",
            "value": "emit"
          }
        },
        {
          "type": "SYMBOL",
          "name": "symbol"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "capture"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "emit"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "when_form"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "do_form"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "capture_form": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "keyword",
          "content": {
            "type": "STRING",
            "value": "capture"
          }
        },
        {
          "type": "SYMBOL",
          "name": "symbol"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "key_value"
              },
              {
                "type": "SYMBOL",
                "name": "capture"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "capture_form"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "when_form"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "quantifier"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "do_form"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "do_form": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "keyword",
          "content": {
            "type": "STRING",
            "value": "do"
          }
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "qexpr"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "when_form": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "keyword",
          "content": {
            "type": "STRING",
            "value": "when"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "logical"
            },
            {
              "type": "SYMBOL",
              "name": "qexpr"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "logical": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "predicate_operator"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "num"
              },
              {
                "type": "SYMBOL",
                "name": "string_literal"
              },
              {
                "type": "SYMBOL",
                "name": "symbol"
              },
              {
                "type": "SYMBOL",
                "name": "capture"
              },
              {
                "type": "SYMBOL",
                "name": "logical"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "predicate_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "and"
        },
        {
          "type": "STRING",
          "value": "or"
        },
        {
          "type": "STRING",
          "value": "not"
        },
        {
          "type": "STRING",
          "value": "eq"
        },
        {
          "type": "STRING",
          "value": "neq"
        },
        {
          "type": "STRING",
          "value": "lt"
        },
        {
          "type": "STRING",
          "value": "leq"
        },
        {
          "type": "STRING",
          "value": "gt"
        },
        {
          "type": "STRING",
          "value": "geq"
        },
        {
          "type": "STRING",
          "value": "in"
        },
        {
          "type": "STRING",
          "value": "within"
        },
        {
          "type": "STRING",
          "value": "exists"
        },
        {
          "type": "STRING",
          "value": "contains"
        },
        {
          "type": "STRING",
          "value": "startswith"
        },
        {
          "type": "STRING",
          "value": "endswith"
        }
      ]
    },
    "sexpr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "REPEAT1",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "expr"
                },
                {
                  "type": "SYMBOL",
                  "name": "capture"
                }
              ]
            }
          },
          {
            "type": "STRING",
            "value": ")"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "quantifier"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    },
    "qexpr": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "expr"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "sexpr"
        },
        {
          "type": "SYMBOL",
          "name": "qexpr"
        },
        {
          "type": "SYMBOL",
          "name": "num"
        },
        {
          "type": "SYMBOL",
          "name": "symbol"
        },
        {
          "type": "SYMBOL",
          "name": "string_literal"
        },
        {
          "type": "SYMBOL",
          "name": "capture"
        }
      ]
    },
    "_expr_with_precedence": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "SYMBOL",
        "name": "expr"
      }
    },
    "_sexpr_with_precedence": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "SYMBOL",
        "name": "sexpr"
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [
    [
      "expr",
      "sexpr"
    ],
    [
      "sexpr",
      "expr"
    ]
  ],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}